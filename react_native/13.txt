ActivityIndicator
로딩중임을 시작적으로 표시할 때 사용하는 컴포넌트 스피너(Spinner)모양의 애니메이션을 제공
데이터를 불러오는 동안 사용자에게 진행 상태를 알려주는데 유용하다

채널 생성 화면
생성된 채널을 파이어베이스로 관리하기

서버를 구축하지 않았기 때문에 채널 데이터를 관리하기 위해 파이어베이스의 데이터베이스를 활용해보자.

NoSQL(Not Only SQL)
문서 중심의 데이터베이스
테이블이나 행이 없고 컬렉션, 문서, 필드로 구성된다.
컬렉션 : 문서의 컨테이너 역할 (table)
문서 : 데이터를 키-값 쌍이나 계층적 구조로 저장한 단위(row)
필드 : 문서 내에서 데이터를 정으히ㅏ는 개별 속성 열(column)

파이어스토어의 특징
데이터베이스가 수정되면 실시간으로 반영

컬렉션과 문서는 항상 유일한 ID를 갖고 있어야 하는 규칙이 있다.
여기서는 channels라는 ID를 가진 하나의 컬렉션을 만들고 생성되는 채널들은 channels컬렉션에 문서로 저장해보자.


채널이름을 입력하는 Input
label:Title
완료 누르면 설명을 입력하는 칸으로 포커스 이동

설명을 입력하는 Input
label:Description
완료버튼 누르면 채널이 만들어지는 _handleCreateButtonPress()함수 호출

이력서 기술스택 면접 -> 이력서,자소서,포폴 기반으로 질문이 들어올것 준비
상 중 하로 작성은 지양
language : java	람다식,스트림,OOP에 맞게 설계,메서드를 자유자재로 쓸 수 있다.
front : html,css,js,react	컴포넌트 설계, 비동기통신 할 줄 안다.
backend : springboot	의존성 주입 할 수 있고, JPA 이용했다.
DB : Oracle, H2, MySQL, fireStore
cloud : AWS,firebase
build-tool : gradle
mobile : react-native
ORM : JPA

fireStore

NoSQL(Not Only SQL)
전통적인 데이터베이스와는 달리 다른 데이터 저장 방식을 사용하는 데이터베이스
문서형 저장

컬렉션 : 테이블같은 개념 데이터를 저장하는 기본 단위
JSON처럼 객체로 동작을 하고 키-값쌍으로 구성

문서 : ROW같은 개념

채널 목록화면
생성된 채널을 보여주는 화면
많은 양의 채널을 목록으로 사용자가 보여줄 수도 있다.
채널이 새로 생성되면 자동으로 목록에 추가되록 만들자.

 ScrollView
모든 데이터를 한 번에 렌더링하므로 렌더링 해야 하는 데이터의 양을 알고 있을 때 사용하는것이 좋다.
렌더링하는 데이터가 매우 많을 경우 한번에 모든 데이터를 렌더링하면 렌더링 속도가 느려지고
메모리 사용량이 증가하는 등 성능이 저하된다는 문제가 있다.

FlatList
화면에 적절한 양의 데이터만 렌더링하고 스크롤의 이동에 맞춰 필요한 부분만 추가적으로 렌더링을 하는 특징이 있다.
이런 특징 덕분에 데이터의 길이가 가변적이고 양을 예측할 수 없는 상황에서 사용하기 좋다.

렌더링 되는 아이템의 수
windowSize의 기본값은 21
21이라는 값은 현재 화면 1과 현재 화면보다 앞쪽에 있는 데이터(10)그리고 현재 화면보다 뒤쪽에 있는 데이터(10)을 의미한다.

현재 화면(7) + 이전데이터 (7X 10screens) + 이후 데이터 (7 X 10) = 147

스크롤 맨위에서 아래 데이터 렌더링
현재데이터(7) + 이전데이터(0) + 이후 데이터(7 X 10) = 77개

windowSize를 작은값으로 변경하면 렌더링 되는 데이터가 줄어들어서 메모리의 소비를 줄이고 성능을 향상시킬 수 있다.
빠르게 스크롤을 하면 렌더링 되지 않은 부분은 흰 공백으로 나올 수 있다.

moment 라이브러리
시간 및 날짜와 관련된 함수를 쉽게 작성할 수 있다.

채널화면
각 채널 문서에 message 컬렉션을 만들면 메시지 데이터를 관리할 수 있다.
채널별로 발생한 메시지를 모아서 관리하면 채널에서 주고받는 메시지를 편하게 저장하고 불러올 수 있다.
